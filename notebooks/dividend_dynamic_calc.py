# -*- coding: utf-8 -*-
"""Dividend_dynamic_calc.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1W9UXkZbitao-w9a4H_58mgYvCbuG-3sZ
"""

import yfinance as yf
from datetime import datetime as dt
import numpy as np
import pandas as pd

dt.utcfromtimestamp(1699920000).strftime('%m/%d/%Y')

monthly_div_stocks = ["arr", "orc", "earn", "agnc", "efc", "oxsq", "dx", "psec", "scm", "pflt", "hrzn", "slrc", "glad", "good", "sjt", "slg", "ftco", "epr", "prt", "ltc", "main", "mdv", "aple", "o", "adc", "wsr", "stag", "land", "peco", "grow", "gwrs", "crt", "bbd", "pbt", "itub", "pvl", "adc", "amivf", "aple", "awrrf", "bbd", "bevff", "bpzzf", "breuf", "bsrtf", "cdpyf", "cgiff", "chwwf", "pprqf", "crt", "ctrrf", "cwyuf", "dreuf", "dretf", "dx", "efc", "epr", "eifzf", "exetf", "mhcuf", "fnlif", "frhlf", "frmuf", "ftco", "gipr", "glad", "good", "gain", "land", "gwrs", "grp.u", "hruff", "hrzn", "ghtxu", "itub", "kriuf", "ltc", "lwscf", "main", "mdv", "mllgf", "npiff", "nwhuf", "orc", "oxsq", "pbt", "peco", "pflt", "peyuf", "pifyf", "pmref", "prmrf", "prt", "psec", "pvl", "pzrif", "o", "riocf", "rpkif", "sbr", "scm", "sisxf", "sjt", "slg", "slrc", "spgyf", "srrtf", "stag", "tbcrf", "tneyf", "trswf", "grow", "wsr", "prt", "sbr", "glad", "hrzn", "slrc", "dretf", "pflt", "gipr", "crt", "scm", "psec", "oxsq", "efc", "dx", "pvl", "earn", "agnc", "sjt", "orc", "arr"]
print(len(monthly_div_stocks))
monthly_div_stocks = list(set(monthly_div_stocks))
print(len(monthly_div_stocks))

md_str = str(monthly_div_stocks).replace("'", "").replace(",", " ").replace("[", "").replace("]", "")
print(md_str)

monthly_div_stks_data = {}

def hypo1k(price, div):
  return float("%.2f" % ((1000 / price) * div))

cnt = 1
tickers = yf.Tickers(md_str)

for stk in monthly_div_stocks:
  try:
    print(f"\nGetting Stock: [{cnt}/{len(monthly_div_stocks)}] {stk.upper()}")
    s = tickers.tickers[stk.upper()]

    monthly_div_stks_data[stk.upper()] = {
        "curPrice": s.info["currentPrice"],
        "dividend": s.info["lastDividendValue"],
        "hypo_1k": hypo1k(s.info["currentPrice"], s.info["lastDividendValue"]),
        "sector": s.info["sector"],
        "industry": s.info["industry"],
        "name": s.info["shortName"]
    }
    cnt += 1
  except Exception as e:
    print(f"Error Getting Stock: {stk}")
    print(e)
    continue

print(f"\n[{cnt}/{len(monthly_div_stocks)}]")

df = pd.DataFrame.from_dict(monthly_div_stks_data)
df = df.transpose()
df = df.sort_values(by=["hypo_1k"], ascending=False)

df

from matplotlib import pyplot as plt
import seaborn as sns
df.groupby('industry').size().plot(kind='barh', color=sns.palettes.mpl_palette('Dark2'))
plt.gca().spines[['top', 'right',]].set_visible(False)

from matplotlib import pyplot as plt
import seaborn as sns
df.groupby('sector').size().plot(kind='barh', color=sns.palettes.mpl_palette('Dark2'))
plt.gca().spines[['top', 'right',]].set_visible(False)